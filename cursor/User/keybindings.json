[
  {
    "key": "cmd+shift+g",
    "command": "lazygit.openLazygit"
  },
  {
    "key": "cmd+shift+c",
    "command": "workbench.action.tasks.runTask",
    "args": "lazydocker"
  },
  {
    "key": "shift+cmd+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "cmd+shift+r",
    "command": "workbench.action.tasks.runTask"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+cmd+r",
    "command": "-workbench.view.extension.thunder-client"
  },
  {
    "key": "shift+cmd+r",
    "command": "-reactSnippets.search",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.tasks.test"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.tasks.reRunTask"
  },
  {
    "key": "cmd+1",
    "when": "terminalFocus",
    "command": "workbench.action.terminal.focusAtIndex1"
  },
  {
    "key": "cmd+2",
    "when": "terminalFocus",
    "command": "workbench.action.terminal.focusAtIndex2"
  },
  {
    "key": "cmd+3",
    "when": "terminalFocus",
    "command": "workbench.action.terminal.focusAtIndex3"
  },
  {
    "key": "cmd+4",
    "when": "terminalFocus",
    "command": "workbench.action.terminal.focusAtIndex4"
  },
  {
    "key": "cmd+5",
    "when": "terminalFocus",
    "command": "workbench.action.terminal.focusAtIndex5"
  },
  {
    "key": "shift+cmd+[Comma] cmd+r",
    "command": "-testing.refreshTests",
    "when": "testing.canRefresh"
  },
  {
    "key": "shift+cmd+f5",
    "command": "workbench.action.debug.restart"
  },
  {
    "key": "shift+cmd+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+b",
    "command": "-mdx.toggleStrong",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'mdx'"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "vim.mode != 'Insert' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.mode != 'Insert' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space w",
    "command": "workbench.action.files.save",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space space",
    "command": "workbench.action.showCommands",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space h",
    "command": "workbench.action.splitEditor",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space v",
    "command": "workbench.action.splitEditorDown",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space t",
    "command": "workbench.view.explorer",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "vim.mode == 'Normal' && (filesExplorerFocus && !inputFocus)"
  },
  {
    "key": "space q",
    "command": "workbench.action.closeEditorsInGroup",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space b d",
    "command": "workbench.action.closeActiveEditor",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space c a",
    "command": "editor.action.quickFix",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space c s",
    "command": "editor.action.triggerSuggest",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "g r n",
    "command": "editor.action.rename",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space r r",
    "command": "editor.action.refactor",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space e",
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditor",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space f",
    "command": "workbench.action.quickOpen",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space s",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.visible"
  },
  {
    "key": "space l g",
    "command": "workbench.action.quickTextSearch",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "g d",
    "command": "editor.action.revealDefinition",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "g t",
    "command": "editor.action.goToTypeDefinition",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "g i",
    "command": "editor.action.goToImplementation",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "g f",
    "command": "editor.action.goToReferences",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "g o",
    "command": "workbench.action.gotoSymbol",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "t a",
    "command": "testing.runAll",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "t f",
    "command": "testing.runCurrentFile",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "t n",
    "command": "testing.runAtCursor",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "t l",
    "command": "testing.reRunLastRun",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "t d",
    "command": "testing.debugAtCursor",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space g g",
    "command": "lazygit.openLazygit",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space g d",
    "command": "editor.action.dirtydiff.next",
    "when": "vim.mode == 'Normal' && (editorTextFocus && !textCompareEditorActive)"
  },
  {
    "key": "space g r",
    "command": "git.revertSelectedRanges",
    "when": "vim.mode == 'Normal' && (editorTextFocus && !textCompareEditorActive)"
  },
  {
    "key": "space d d",
    "command": "workbench.debug.action.toggleRepl",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && workbench.panel.repl.view.active"
  },
  {
    "key": "shift+escape",
    "command": "workbench.debug.action.toggleRepl",
    "when": "inDebugRepl && workbench.panel.repl.view.active"
  },
  {
    "key": "space d c",
    "command": "workbench.action.debug.continue",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && debugState == 'stopped'"
  },
  {
    "key": "space d s",
    "command": "workbench.action.debug.restart",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space d b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space d q",
    "command": "workbench.action.debug.stop",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  {
    "key": "space d t",
    "command": "workbench.action.debug.stepOut",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  {
    "key": "space d o",
    "command": "workbench.action.debug.stepOver",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  {
    "key": "space d i",
    "command": "workbench.action.debug.stepInto",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  {
    "key": "space d e",
    "command": "editor.debug.action.showDebugHover",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  {
    "key": "space d u",
    "command": "workbench.view.debug",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  {
    "key": "ctrl-n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  /* File Explorer */
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "s",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "v",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    },
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  /* Remove default shortcuts */
  {
    "key": "cmd+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "space -",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "vim.mode == 'Normal' && !inputFocus"
  },
  {
    "key": "shift+space",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus && vim.mode == 'Normal' "
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-extension.vim_ctrl+r",
    "when": "editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"
  },
  {
    "key": "alt+space",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "alt+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "alt+escape",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "sideBarVisible"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "escape",
    "command": "editor.closeTestPeek",
    "when": "(vim.mode == 'Normal' && (editorTextFocus || !inputFocus)) && ((testing.isInPeek && !config.editor.stablePeek) || (testing.isPeekVisible && !config.editor.stablePeek))"
  },
]